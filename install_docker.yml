---
- name: Install Docker on Ubuntu 24.04
  hosts: all
  become: true # Required for privileged operations (installing packages)
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"

    - name: Install required dependencies
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpgkey | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg # Check if the key already exists

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu jammy stable" > /etc/apt/sources.list.d/docker.list
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"

    - name: Update apt cache again after adding the repository
      apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"

    - name: Install Docker CE and containerd.io
      apt:
        name:
          - docker-ce
          - docker-compose-plugin
          - containerd.io
        state: present
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"

    - name: Enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to docker group (optional)
      user:
        name: "{{ ansible_user }}" # Or specify a specific username
        groups: docker
      when: ansible_user is defined and ansible_distribution == "Ubuntu" and ansible_distribution_version == "24.04"

    - name: Verify Docker installation (optional)
      shell: docker --version
      register: docker_version
      changed_when: false # Don't report as changed if the version is already installed
      failed_when: docker_version.rc != 0 and "docker command not found" not in docker_version.stderr

    - name: Print Docker version (optional)
      debug:
        msg: "Docker version: {{ docker_version.stdout }}"